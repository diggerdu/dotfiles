#! /bin/sh

sxhkd &
xrandr --dpi 108
xrandr --output DVI-D-0 --primary --mode 1920x1080 --pos 1024x0 --rotate left --output HDMI-0 --mode 1280x1024 --pos 0x0 --rotate left --output DP-5 --off --output DP-4 --off --output DP-3 --mode 1440x900 --pos 2104x0 --rotate right --output DP-2 --off --output DP-1 --off --output DP-0 --off

export DISPLAY=:0
export GTK_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export QT_IM_MODULE=fcitx

#bspc monitor -d I II III IV V VI VII VIII IX X

bspc config border_width         0
bspc config window_gap           0

bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
#bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

bspc monitor DVI-D-0 -d 3
bspc monitor HDMI-0 -d 4
bspc monitor DP-3 -d 2
bspc monitor DVI-D-0 -a 1
bspc monitor HDMI-0 -a 5
bspc monitor DP-3 -a 6


# others
ibus-daemon -d
ibus engine rime



# Fix X window manager name properties to work around java bugs with
# non-reparenting window managers.  This is a different solution from
# the wmname utility provided by suckless, as it is NetWM compatible,
# while wmname sets the value of _NET_SUPPORTING_WM_CHECK to root win.

IRONIC_WM_NAME="LG3D"
NET_WIN=$(xprop -root _NET_SUPPORTING_WM_CHECK | awk -F "# " '{print $2}')

if [[ "$NET_WIN" == 0x* ]]; then
    # xprop cannot reliably set UTF8_STRING, so we replace as string.
    # fortunately, jdk is OK with this, but wm-spec says use UTF8_STRING.
    xprop -id "$NET_WIN" -remove _NET_WM_NAME
    xprop -id "$NET_WIN" -f _NET_WM_NAME 8s -set _NET_WM_NAME "$IRONIC_WM_NAME"
else
    # even if we're not net compatible, do java workaround
    xprop -root -remove _NET_WM_NAME
    xprop -root -f _NET_WM_NAME 8s -set _NET_WM_NAME "$IRONIC_WM_NAME"
fi


